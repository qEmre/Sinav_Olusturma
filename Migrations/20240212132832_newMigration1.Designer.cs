// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SinavOlusturma.DataLayer;

#nullable disable

namespace SinavOlusturma.Migrations
{
    [DbContext(typeof(ProjeDbContext))]
    [Migration("20240212132832_newMigration1")]
    partial class newMigration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SinavOlusturma.Models.RssItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rssItems");
                });

            modelBuilder.Entity("SinavOlusturma.Models.Sinav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("sinavs");
                });

            modelBuilder.Entity("SinavOlusturma.Models.Soru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SinavId")
                        .HasColumnType("int");

                    b.Property<string>("dogruCevap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secenekA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secenekB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secenekC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secenekD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soruMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SinavId");

                    b.ToTable("sorus");
                });

            modelBuilder.Entity("SinavOlusturma.Models.Soru", b =>
                {
                    b.HasOne("SinavOlusturma.Models.Sinav", "Sinav")
                        .WithMany("Sorular")
                        .HasForeignKey("SinavId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinav");
                });

            modelBuilder.Entity("SinavOlusturma.Models.Sinav", b =>
                {
                    b.Navigation("Sorular");
                });
#pragma warning restore 612, 618
        }
    }
}
